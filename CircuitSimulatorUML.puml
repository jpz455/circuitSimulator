@startuml
'https://plantuml.com/class-diagram

skinparam ClassBackgroundColor #LemonChiffon

class Circuit{
    +name: str
    +buses: Dict[str, Bus]
    +transformers: Dict[str, Transformer]
    +geometries: Dict[str, Geometry]
    +conductors: Dict[str, Conductor]
    +transmissionlines: Dict[str, TransmissionLine]
    +settings: Settings

    +add_bus(Bus)
    +add_transformer(Transformer)
    +add_geometry(Geometry)
    +add_conductor(Conductor)
    +add_transmissionline(TransmissionLine)
    }

class Bus {
    +name: str
    +v: float
    +numBus: float
    +index: float
    }

class Bundle {
    +name: str
    +spacing: float
    +conductor: Conductor
    +num_conductors: float
    +resistance: float
    +DSL: float
    +DSC: float
    +calculate_DSL(): float
    +calculate_DSC(): float
    }

class Conductor {
    +name: str
    +diameter: float
    +GMR: float
    +resistance: float
    +amp: float
    +radius: float
    }

class Geometry{
    +name: str
    +xa: float
    +ya: float
    +xb: float
    +yb: float
    +xc: float
    +yc: float
    +Dab: float
    +Dbc: float
    +Dca: float
    +Deq: float
    +calculate_Deq(): float
    }

class Transformer {
    +name: str
    +bus1: str
    +bus2: str
    +power_rating: float
    +impedance_percent: float
    +x_over_r_ratio: float
    +settings: Settings
    +z: float
    +y: float
    +x: float
    +r: float
    +yprim: List[float]
    +matrix: Dict[str, float]
    +v_base: float
    +z_base: float
    +y_base: float
    +xpu: float
    +rpu: float
    +zpu: float
    +ypu: float

    +calc_z()
    +calc_r()
    +calc_x()
    +calc_in_pu()
    +calc_yprim()
    +print_yprim()
    }

class TransmissionLine {
    +name: str
    +bus1: str
    +bus2: str
    +bundle: Bundle
    +geometry: Geometry
    +length: float
    +settings: Settings
    +R: float
    +X: float
    +Z: float
    +B: float
    +Y: float
    +Rpu: float
    +Xpu: float
    +Zpu: float
    +Bpu: float
    +Ypu: float
    +Ytotal: float
    +z_base: float
    +y_base: float
    +y_matrix: List[complex]
    +matrix: Dict[str, float]

    +calculate_series_impedance()
    +calculate_admittance()
    +calculate_y_matrix()
    +calculate_base_values()
    +print_yprim()
    }


class Settings{
    +f(float)
    +s_base(float)
}

Circuit *-- Transformer
Circuit *-- Bus
Circuit *-- TransmissionLine
Circuit *-- Geometry
Circuit *-- Conductor
Circuit *-- Settings

TransmissionLine *-- Geometry
TransmissionLine *-- Bundle
TransmissionLine *-- Bus
TransmissionLine *-- Settings

Bundle *-- Conductor

Transformer *-- Settings









@enduml